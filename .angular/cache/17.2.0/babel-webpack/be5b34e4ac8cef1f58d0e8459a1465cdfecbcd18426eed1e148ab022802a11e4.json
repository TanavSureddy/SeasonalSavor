{"ast":null,"code":"import _asyncToGenerator from \"/Users/yogendra/repos/chatnext/trunk/apps/grocery/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Validators } from \"@angular/forms\";\nimport axios from \"axios\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../../services/data-sharing.services\";\nimport * as i4 from \"../../../services/globals\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\nfunction OtpPage_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = i0.ɵɵnextContext().index;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" Invalid OTP entered at position \", i_r2 + 1, \". Only one digit at one placeholder \");\n  }\n}\nfunction OtpPage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"ion-input\", 7);\n    i0.ɵɵtemplate(2, OtpPage_div_10_div_2_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const control_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControl\", control_r1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", control_r1.invalid && control_r1.touched);\n  }\n}\nexport let OtpPage = /*#__PURE__*/(() => {\n  class OtpPage {\n    constructor(router, fb, dataSharingService, globals, toastController) {\n      this.router = router;\n      this.fb = fb;\n      this.dataSharingService = dataSharingService;\n      this.globals = globals;\n      this.toastController = toastController;\n    }\n    ngOnInit() {\n      this.initializeForm();\n    }\n    initializeForm() {\n      this.otpForm = this.fb.group({\n        otp1: [\"\", [Validators.required, Validators.pattern(/^\\d{1}$/)]],\n        otp2: [\"\", [Validators.required, Validators.pattern(/^\\d{1}$/)]],\n        otp3: [\"\", [Validators.required, Validators.pattern(/^\\d{1}$/)]],\n        otp4: [\"\", [Validators.required, Validators.pattern(/^\\d{1}$/)]]\n      });\n      // Get an array of controls for easier iteration in the template\n      this.otpControls = Object.keys(this.otpForm.controls).map(key => this.otpForm.controls[key]);\n    }\n    successToast() {\n      this.toastController.create({\n        message: \"Successfully registered. Please login to continue.\",\n        duration: 3000,\n        // Duration of the toast in milliseconds\n        position: \"top\",\n        // Position of the toast on the screen ('top', 'bottom', 'middle')\n        color: \"success\" // You can customize the color based on your app's theme\n      }).then(toast => {\n        toast.present();\n      });\n    }\n    errorToast(message) {\n      this.toastController.create({\n        message: message,\n        duration: 3000,\n        // Duration of the toast in milliseconds\n        position: \"top\",\n        // Position of the toast on the screen ('top', 'bottom', 'middle')\n        color: \"danger\" // You can customize the color based on your app's theme\n      }).then(toast => {\n        toast.present();\n      });\n    }\n    redirectToHome() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const formData = _this.otpForm.value;\n        _this.dataSharingService.setFormData(formData);\n        const userData = _this.dataSharingService.getFormData();\n        const postUrl = _this.dataSharingService.loginMode ? `https://api.jykrasolutions.com/api/user/login` : `https://api.jykrasolutions.com/api/user/register`;\n        //console.log(\"postUrl\", userData);\n        yield axios.post(postUrl, userData).then( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (response) {\n            if (response.data.message === \"Invalid OTP for login\" || response.data.message === \"User not registered\") {\n              // alert(\"Invalid Otp redirecting to the logIn Page \");\n              _this.errorToast(\"Invalid OTP. Please try again.\");\n            } else {\n              if (_this.dataSharingService.loginMode) {\n                _this.globals.authenticated = true;\n                _this.dataSharingService.clearFormData();\n                _this.globals.user.name = yield response.data.name;\n                _this.globals.user.mobileNumber = yield response.data.mobileNumber;\n                _this.globals.saveLocalData(\"loggedIn\", \"true\");\n                _this.globals.saveLocalData(\"name\", response.data.name);\n                _this.globals.saveLocalData(\"mobileNumber\", response.data.mobileNumber);\n                _this.globals.saveLocalData(\"userType\", response.data.userType);\n                _this.globals.saveLocalData(\"userId\", response.data.userId);\n                _this.globals.saveLocalData(\"city\", response.data.city);\n                _this.globals.saveLocalData(\"area\", response.data.area);\n                _this.globals.saveLocalData(\"building\", response.data.building);\n                _this.globals.saveLocalData(\"flatNumber\", response.data.flatNumber);\n                _this.globals.saveLocalData(\"floor\", response.data.floor);\n                _this.router.navigate([\"/tabs/home\"]);\n              } else {\n                if (response.data.message === \"User already exists\") {\n                  _this.errorToast(\"User already exists. Please login to continue.\");\n                } else {\n                  _this.successToast();\n                }\n                _this.dataSharingService.loginMode = true;\n                _this.router.navigate([\"/login\"]);\n              }\n            }\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }()).catch(error => {\n          console.error(\"Error posting user information to the backend:\", error);\n          _this.errorToast(\"Server is unreachable. Please try again later\");\n        });\n      })();\n    }\n    static #_ = this.ɵfac = function OtpPage_Factory(t) {\n      return new (t || OtpPage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.DataSharingService), i0.ɵɵdirectiveInject(i4.Globals), i0.ɵɵdirectiveInject(i5.ToastController));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: OtpPage,\n      selectors: [[\"app-otp\"]],\n      decls: 13,\n      vars: 5,\n      consts: [[3, \"fullscreen\"], [1, \"pageWrapper\", \"ion-padding\"], [1, \"pageRow\", \"ion-margin-vertical\"], [3, \"formGroup\"], [1, \"otpWrapper\", \"ion-margin-bottom\", \"ion-padding-bottom\"], [4, \"ngFor\", \"ngForOf\"], [\"expand\", \"block\", 3, \"disabled\", \"click\"], [\"type\", \"number\", 1, \"loginInput\", 3, \"formControl\"], [\"class\", \"invalid-message\", 4, \"ngIf\"], [1, \"invalid-message\"]],\n      template: function OtpPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"p\");\n          i0.ɵɵtext(4, \"We have sent a verification code to\");\n          i0.ɵɵelement(5, \"br\");\n          i0.ɵɵelementStart(6, \"b\");\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"form\", 3)(9, \"div\", 4);\n          i0.ɵɵtemplate(10, OtpPage_div_10_Template, 3, 2, \"div\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"ion-button\", 6);\n          i0.ɵɵlistener(\"click\", function OtpPage_Template_ion_button_click_11_listener() {\n            return ctx.redirectToHome();\n          });\n          i0.ɵɵtext(12, \"Continue\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"fullscreen\", true);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.dataSharingService.getFormData().mobileNumber);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"formGroup\", ctx.otpForm);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.otpControls);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", ctx.otpForm.invalid);\n        }\n      },\n      dependencies: [i6.NgForOf, i6.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormControlDirective, i2.FormGroupDirective, i5.IonButton, i5.IonContent, i5.IonInput, i5.NumericValueAccessor],\n      styles: [\"ion-title.title-large[_ngcontent-%COMP%]{color:#fff;font-size:30px}ion-title[_ngcontent-%COMP%]{--color: #000}ion-toolbar[_ngcontent-%COMP%]{--background: #ffffff}.pageWrapper[_ngcontent-%COMP%]   .pageRow[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{color:#000000de;text-align:center;font-size:18px;font-style:normal;font-weight:500;line-height:normal;margin:30px 0;padding:0;line-height:25px}.pageWrapper[_ngcontent-%COMP%]   .pageRow[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   b[_ngcontent-%COMP%]{font-weight:700}.pageWrapper[_ngcontent-%COMP%]   .pageRow[_ngcontent-%COMP%]   .otpWrapper[_ngcontent-%COMP%]{display:flex;flex-direction:row;column-gap:20px;justify-content:center}.pageWrapper[_ngcontent-%COMP%]   .pageRow[_ngcontent-%COMP%]   ion-input[_ngcontent-%COMP%]{width:100%;height:50px;text-align:center;border-color:var(--border-color);border-width:1px;border-style:solid;--border-radius: 10px;border-radius:10px}\"]\n    });\n  }\n  return OtpPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}